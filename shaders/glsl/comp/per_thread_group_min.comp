#version 430

layout (local_size_x = 32, local_size_y = 32) in;

layout(binding = 0, r32f) uniform coherent image2D data;
layout(binding = 1, r32f) uniform coherent image2D minimums;

void main()
{
    // Calculate the index
    ivec2 global_idx;
    global_idx.x = int(gl_WorkGroupID.x * gl_WorkGroupSize.x + gl_LocalInvocationID.x); // + 1 for padding
    global_idx.y = int(gl_WorkGroupID.y * gl_WorkGroupSize.y + gl_LocalInvocationID.y); // + 1 for padding

    uvec2 size = imageSize(data);
    // WATER HEIGHTMAP IMAGE INDICES
    bool valid = global_idx.x < int(heightmap_size.x) && global_idx.y < int(heightmap_size.y);
    if(valid && gl_WorkGroupID.x == 0 && gl_WorkGroupID.y == 0)
    {
        int soil_humidity = _FLOODED_HUMIDITY;

        float standing_water = imageLoad(standing_water, global_idx).x;

        if(standing_water == 0)
        {
            // Load the soil infiltration rate
            uint soil_infiltration_rate = imageLoad(soil_infiltrations, global_idx).x;
            // Soil humidity allocation
            float soil_allocation = min(1.0, float(soil_infiltration_rate)/rainfall_intensity);

            soil_humidity = int(round(soil_allocation * rainfall));
        }
        imageStore(resulting_soil_humidity, global_idx, uvec4(soil_humidity,0,0,0));
    }

    memoryBarrierImage();
    barrier();
}
